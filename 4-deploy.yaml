apiVersion: apps/v1
kind: Deployment
metadata: 
  labels: 
    app: httpserver
  name: httpserver
spec: 
  progressDeadlineSeconds: 60
  replicas: 5
  revisionHistoryLimit: 10
  selector: 
    matchLabels: 
      app: httpserver
  strategy: 
    rollingUpdate: 
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template: 
    metadata: 
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      labels:
        app: httpserver
    spec: 
      containers: 
        - env: 
            - name: httpport
              valueFrom: 
                configMapKeyRef: 
                  key: httpport
                  name: lslsp-config
          image: "lslsp2/httpserver:0.10"
          ports:
            - containerPort: 80
          imagePullPolicy: IfNotPresent
          livenessProbe: 
            failureThreshold: 3
            httpGet: 
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: httpserver
          readinessProbe: 
            failureThreshold: 3
            httpGet: 
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: 
            limits: 
              cpu: 200m
              memory: 100Mi
            requests: 
              cpu: 20m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30